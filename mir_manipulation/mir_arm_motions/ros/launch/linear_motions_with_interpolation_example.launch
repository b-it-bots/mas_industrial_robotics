<?xml version="1.0"?>
<!-- Note: this is an example launch file, do not modify. -->
<launch>
  <!-- Do not use namespace to avoid mismatch from Moveit! topics -->
  <node pkg="mcr_trajectory_generation" type="ik_trajectory_solver_node"
        name="linear_interpolator_ik_trajectory_solver" output="screen">
    <!-- Move group for MoveIt! -->
    <param name="move_group" type="str" value="move_group"/>

    <!-- Name of the group to compute the inverse kinematics -->
    <param name="arm" type="str" value="arm_1"/>

    <!-- The reference frame for the trajectory -->
    <param name="reference_frame" type="str" value="base_link"/>

    <!-- Joint names of the arm -->
    <rosparam param="joint_names">
      - 'arm_joint_1'
      - 'arm_joint_2'
      - 'arm_joint_3'
      - 'arm_joint_4'
      - 'arm_joint_5'
    </rosparam>

    <remap from="~poses"
           to="/mir_manipulation/linear_interpolator/linear_interpolator/path"/>
  </node>

  <node pkg="mcr_trajectory_generation" type="trajectory_executor_node"
        name="linear_interpolator_trajectory_executor" output="screen" ns="mir_manipulation">
    <!-- Trajectory controller to be used to execute the trajectory. -->
    <param name="trajectory_controller" type="str"
           value="/arm_1/arm_controller/follow_joint_trajectory"/>

    <remap from="~trajectory_in"
           to="/mir_manipulation/linear_interpolator/trajectory_generator/trajectory_out"/>
  </node>

  <group ns="mir_manipulation/linear_interpolator">
    <node pkg="mcr_trajectory_generation" type="linear_interpolator_node"
          name="linear_interpolator" output="screen">

      <!-- Number of poses to generate between the start and goal pose
          (including those two), e.g. specifying 5 'max_poses' will output
          the start pose as the first pose, then three poses equally separated, and
          finally the goal pose as the fifth pose. -->
      <param name="max_poses" type="int" value="5"/>

      <!-- Cycle rate of the node (in Hz) -->
      <param name="loop_rate" type="double" value="10.0"/>

      <remap from="~start_pose" to="/linear_motions/start_pose"/>
      <remap from="~goal_pose" to="/linear_motions/goal_pose"/>
    </node>

    <node pkg="mcr_trajectory_generation" type="trajectory_generator_node"
          name="trajectory_generator" output="screen">
      <!-- Time scaling factor to control the duration of moving from point 1 to
          # point 2 (in seconds). -->
      <param name="scaling_factor" type="double" value="1.0"/>

      <!-- Maximum joint velocity allowed. -->
      <param name="max_velocity" type="str" value="1.5"/>

      <!-- Maximum joint acceleration allowed. -->
      <param name="max_acceleration" type="str" value="1.0"/>

      <remap from="~trajectory_in"
             to="/linear_interpolator_ik_trajectory_solver/trajectory"/>
    </node>

    <node pkg="mcr_trajectory_generation" type="linear_interpolator_demo_node"
          name="coordinator" output="screen">
      <!-- Node cycle rate (in hz) -->
      <param name="loop_rate" type="double" value="30.0"/>

       <remap from="~event_in" to="/mir_manipulation/linear_interpolator/event_in"/>
      <remap from="~event_out" to="/mir_manipulation/linear_interpolator/event_out"/>

      <!-- To trigger components -->
      <remap from="~start_linear_interpolator"
             to="/mir_manipulation/linear_interpolator/linear_interpolator/event_in"/>
      <remap from="~start_ik_solver"
             to="/linear_interpolator_ik_trajectory_solver/event_in"/>
      <remap from="~start_trajectory_generator"
             to="/mir_manipulation/linear_interpolator/trajectory_generator/event_in"/>

      <!-- To obtain feedback from components -->
      <remap from="~linear_interpolator_status"
             to="/mir_manipulation/linear_interpolator/linear_interpolator/event_out"/>
      <remap from="~ik_solver_status"
             to="/linear_interpolator_ik_trajectory_solver/event_out"/>
      <remap from="~trajectory_generator_status"
             to="/mir_manipulation/linear_interpolator/trajectory_generator/event_out"/>
    </node>
  </group>
</launch>
