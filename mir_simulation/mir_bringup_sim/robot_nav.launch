<?xml version="1.0"?>
<launch>

  <arg name="robot" default="$(optenv ROBOT !!NO_ROBOT_SET!!)"/>
  <arg name="robot_env" default="$(optenv ROBOT_ENV !!NO_ROBOT_ENV_SET!!)"/>

  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="false"/>

  <arg name="init_pos_x" default="-0.5"/>
  <arg name="init_pos_y" default="0.0"/>
  <arg name="init_pos_z" default="0.08"/>

  <!-- upload robot params (joint configurations) -->
  <include file="$(find mir_default_robot_config)/upload_param.launch" >
    <arg name="robot" value="$(arg robot)" />
  </include>

  <!-- start gazebo and load environment -->
  <include file="$(find mcr_gazebo_worlds)/ros/launch/$(arg robot_env).launch">
    <arg name="paused" value="$(arg paused)" />
    <arg name="use_sim_time" value="$(arg use_sim_time)" />
    <arg name="gui" value="$(arg gui)" />
  </include>

  <!-- upload robot description -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find mir_hardware_config)/$(arg robot)/urdf/robot.urdf.xacro" />
  <node pkg="gazebo_ros" type="spawn_model" name="spawn_robot" respawn="false" output="screen"
    args="-param robot_description
          -urdf
          -x $(arg init_pos_x)
          -y $(arg init_pos_y)
          -z $(arg init_pos_z)
          -model youbot">
  </node>

  <!-- launch joint state controller -->
  <include file="$(find youbot_gazebo_control)/launch/joint_state_controller.launch" />

  <!-- launch robot state controller -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="100.0" />
  </node>

  <!-- load robot specific launch files -->
  <include file="$(find mir_bringup_sim)/robots/$(arg robot).launch" />

  <!-- launching manipulation nodes -->
  <!-- moveit! -->
  <include file="$(find mir_moveit_youbot)/$(arg robot)/move_group.launch">
      <arg name="planner_pipeline" value="interpolation" />
  </include>
  <param name="/move_group/trajectory_execution/allowed_execution_duration_scaling" type="double" value="1.5"/>
  <!-- by setting this parameter we disable checking that the first point in the trajectory is the current state -->
  <param name="/move_group/trajectory_execution/allowed_start_tolerance" type="double" value="0.0"/>

  <include file="$(find mir_moveit_client)/ros/launch/moveit_client.launch" />

  <!-- launching navigation nodes -->
  <!-- move_base with dwa approach -->
  <include file="$(find mir_2dnav)/ros/launch/2dnav.launch" />

</launch>
