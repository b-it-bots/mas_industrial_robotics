os: linux
dist: bionic

services:
  - docker

language: cpp

env:
  global:
    - COMPOSE_VERSION: 1.22.0

before_install:
  - sudo pip install --upgrade pip
  - sudo pip install sphinx
  - sudo pip install --user sphinx-rtd-theme
  - sudo rm /usr/local/bin/docker-compose
  - sudo curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
  - sudo chmod +x /usr/local/bin/docker-compose
  - docker-compose -v
  - ROS_DIST="$(cut -d'-' -f1 <<<$TRAVIS_BRANCH)"
  - DEVEL_BRANCH="$(cut -d'-' -f2 <<<$TRAVIS_BRANCH)"
  - if [[ $DEVEL_BRANCH == "devel"  ]] ; then TAG=devel; else TAG=latest ; fi
  - echo $ROS_DIST
  - echo $TAG
  - CONTAINER_RELEASE_IMAGE=bitbots/industrial-$ROS_DIST:$TAG
  - echo $CONTAINER_RELEASE_IMAGE

jobs:
  include:
    - stage: build
      name: "Build mas industrial image"
      script:
        - echo $CONTAINER_RELEASE_IMAGE
        - ROS_DIST=$ROS_DIST TAG=$TAG docker-compose build mas_industrial_robotics
        - docker images
        - echo "Build successful"

    - stage: deploy
      name: "Build and deploy mas industrial image to dockerhub"
      skip_cleanup: true
      script:
        - echo $CONTAINER_RELEASE_IMAGE
        - ROS_DIST=$ROS_DIST TAG=$TAG docker-compose build mas_industrial_robotics
        - docker images
        - echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
        - docker push $CONTAINER_RELEASE_IMAGE
        - echo "Build and push successful"

    - stage: docs
      name: "Build and deploy documentation"
      script:
        - BRANCH=master
        - cd docs && DOCS_DIR=$(pwd)/build && rm -rf build && make html
        - cd /tmp && git clone https://$GITHUB_USERNAME:$GITHUB_PASSWORD@github.com/b-it-bots/wiki.git --branch $BRANCH
        - cp -r $DOCS_DIR/html/ /tmp/wiki/work/ && cd wiki
        - git checkout $BRANCH && git add * && git commit -m "Update mas_industrial_robotics documentation via Travis CI" || true
        - git push origin $BRANCH

stages:
  - build
    if: (branch IN (devel, indigo, kinetic, kinetic-devel, melodic, melodic-devel, travis-tests) AND type == "pull_request")
  - name: deploy
    if: (branch IN (devel, indigo, kinetic, kinetic-devel, melodic, melodic-devel, travis-tests) AND type != "pull_request") OR tag = true
  - name: docs
    if: (branch IN (devel, indigo, kinetic, kinetic-devel, melodic, melodic-devel, travis-tests) AND type != "pull_request") OR tag = true
