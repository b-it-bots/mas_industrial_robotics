---
name: CI Devel
on:
  pull_request:
  push:
    branches:
      - '**-devel'
  schedule:
    - cron: "0 1 * * 0" # every 01.00 week 0 (sunday)

jobs:
  setup:
    name: Install dependencies
    runs-on: ubuntu-latest
    outputs:
      ros_distro: ${{ setps.install_deps.outputs.ros_distro }}
      image_tag: ${{ setps.install_deps.outputs.image_tag }}
    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      id: install_deps
      run: |
        GH_BRANCH=${GITHUB_REF##*/}
        ROS_DIST="$(cut -d'-' -f1 <<<$GH_BRANCH)"
        DEVEL_BRANCH="$(cut -d'-' -f2 <<<$GH_BRANCH)"
        if [[ $DEVEL_BRANCH == "devel"  ]] ; then TAG=devel; else TAG=latest ; fi
        echo $ROS_DISTRO
        echo $TAG
        echo "::set-output name=ros_distro::$ROS_DISTRO"
        echo "::set-output name=image_tag::$TAG"
        #sudo pip3 install --upgrade pip
        #sudo pip3 install sphinx
        #sudo pip3 install --user sphinx-rtd-theme
        #sudo rm /usr/local/bin/docker-compose
        #sudo curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
        #sudo chmod +x /usr/local/bin/docker-compose
        #docker-compose -v
        #CONTAINER_RELEASE_IMAGE=bitbots/industrial-$ROS_DIST:$TAG
        #echo $CONTAINER_RELEASE_IMAGE

  build:
    name: Build
    needs: setup
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Build image
      id: build_image
      run: |
        ROS_DISTRO=${{ needs.setup.outputs.ros_distro }}
        IMAGE_TAG=${{ needs.setup.outputs.image_tag }}
        ROS_DISTRO=$ROS_DISTRO TAG=$IMAGE_TAG docker-compose build mas_industrial_robotics

    - name: Docker image list
      run: docker images

  deploy-devel:
    name: Deploy Devel
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GH_TOKEN }}

    - name: Build and deploy image
      id: docker_deploy_dev
      run: |
        # GitHub container registry is still beta
        bash .github/scripts/build-and-deploy.sh --deployment dev --registry ghcr.io --publish latest

    - name: Docker image list
      run: docker images

  deploy-prod:
    name: Deploy Prod
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GH_TOKEN }}

    - name: Build and deploy image
      id: docker_deploy_prod
      run: |
        # GitHub container registry is still beta, just build
        bash .github/scripts/build-and-deploy.sh --deployment prod --registry ghcr.io --publish latest

    - name: Docker image list
      run: docker images

